"use strict";(self.webpackChunkpanman=self.webpackChunkpanman||[]).push([[461],{9999:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=t(5893),r=t(1151);const i={},s="Jupyter notebooks",a={id:"Jupyter notebooks",title:"Jupyter notebooks",description:"When creating a [Jupyter",source:"@site/docs/Jupyter notebooks.md",sourceDirName:".",slug:"/Jupyter notebooks",permalink:"/panman/Jupyter notebooks",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chunked HTML",permalink:"/panman/Chunked HTML"},next:{title:"Syntax highlighting",permalink:"/panman/Syntax highlighting"}},l={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"jupyter-notebooks",children:"Jupyter notebooks"}),"\n",(0,o.jsxs)(n.p,{children:["When creating a ",(0,o.jsx)(n.a,{href:"https://nbformat.readthedocs.io/en/latest/",children:"Jupyter\nnotebook"}),", pandoc will try\nto infer the notebook structure. Code blocks with the class ",(0,o.jsx)(n.code,{children:"code"})," will\nbe taken as code cells, and intervening content will be taken as\nMarkdown cells. Attachments will automatically be created for images in\nMarkdown cells. Metadata will be taken from the ",(0,o.jsx)(n.code,{children:"jupyter"})," metadata\nfield. For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'---\ntitle: My notebook\njupyter:\n  nbformat: 4\n  nbformat_minor: 5\n  kernelspec:\n     display_name: Python 2\n     language: python\n     name: python2\n  language_info:\n     codemirror_mode:\n       name: ipython\n       version: 2\n     file_extension: ".py"\n     mimetype: "text/x-python"\n     name: "python"\n     nbconvert_exporter: "python"\n     pygments_lexer: "ipython2"\n     version: "2.7.15"\n---\n\n# Lorem ipsum\n\n**Lorem ipsum** dolor sit amet, consectetur adipiscing elit. Nunc luctus\nbibendum felis dictum sodales.\n\n``` code\nprint("hello")\n```\n\n## Pyout\n\n``` code\nfrom IPython.display import HTML\nHTML("""\n<script>\nconsole.log("hello");\n<\/script>\n<b>HTML</b>\n""")\n```\n\n## Image\n\nThis image ![image](myimage.png) will be\nincluded as a cell attachment.\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you want to add cell attributes, group cells differently, or add\noutput to code cells, then you need to include divs to indicate the\nstructure. You can use either ",(0,o.jsx)(n.a,{href:"#extension-fenced_divs",children:"fenced divs"})," or\n",(0,o.jsx)(n.a,{href:"#extension-native_divs",children:"native divs"})," for this. Here is an example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:':::::: {.cell .markdown}\n# Lorem\n\n**Lorem ipsum** dolor sit amet, consectetur adipiscing elit. Nunc luctus\nbibendum felis dictum sodales.\n::::::\n\n:::::: {.cell .code execution_count=1}\n``` {.python}\nprint("hello")\n```\n\n::: {.output .stream .stdout}\n```\nhello\n```\n:::\n::::::\n\n:::::: {.cell .code execution_count=2}\n``` {.python}\nfrom IPython.display import HTML\nHTML("""\n<script>\nconsole.log("hello");\n<\/script>\n<b>HTML</b>\n""")\n```\n\n::: {.output .execute_result execution_count=2}\n```{=html}\n<script>\nconsole.log("hello");\n<\/script>\n<b>HTML</b>\nhello\n```\n:::\n::::::\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you include raw HTML or TeX in an output cell, use the ",(0,o.jsx)(n.a,{href:"#extension-raw_attribute",children:"raw\nattribute"}),", as shown in the last cell of the\nexample above. Although pandoc can process \u201cbare\u201d raw HTML and TeX, the\nresult is often interspersed raw elements and normal textual elements,\nand in an output cell pandoc expects a single, connected raw block. To\navoid using raw HTML or TeX except when marked explicitly using raw\nattributes, we recommend specifying the extensions\n",(0,o.jsx)(n.code,{children:"-raw_html-raw_tex+raw_attribute"})," when translating between Markdown and\nipynb notebooks."]}),"\n",(0,o.jsxs)(n.p,{children:["Note that options and extensions that affect reading and writing of\nMarkdown will also affect Markdown cells in ipynb notebooks. For\nexample, ",(0,o.jsx)(n.code,{children:"--wrap=preserve"})," will preserve soft line breaks in Markdown\ncells; ",(0,o.jsx)(n.code,{children:"--markdown-headings=setext"})," will cause Setext-style headings to\nbe used; and ",(0,o.jsx)(n.code,{children:"--preserve-tabs"})," will prevent tabs from being turned to\nspaces."]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var o=t(7294);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);