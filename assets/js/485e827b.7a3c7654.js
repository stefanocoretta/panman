"use strict";(self.webpackChunkpanman=self.webpackChunkpanman||[]).push([[758],{3983:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=n(5893),o=n(1151);const i={},r="Custom Styles",l={id:"Custom Styles",title:"Custom Styles",description:"Custom styles can be used in the docx and ICML formats.",source:"@site/docs/Custom Styles.md",sourceDirName:".",slug:"/Custom Styles",permalink:"/panman/Custom Styles",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Syntax highlighting",permalink:"/panman/Syntax highlighting"},next:{title:"Custom readers and writers",permalink:"/panman/Custom readers and writers"}},a={},c=[{value:"Output",id:"output",level:2},{value:"Input",id:"input",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"custom-styles",children:"Custom Styles"}),"\n",(0,s.jsx)(t.p,{children:"Custom styles can be used in the docx and ICML formats."}),"\n",(0,s.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(t.p,{children:["By default, pandoc\u2019s docx and ICML output applies a predefined set of\nstyles for blocks such as paragraphs and block quotes, and uses largely\ndefault formatting (italics, bold) for inlines. This will work for most\npurposes, especially alongside a ",(0,s.jsx)(t.code,{children:"reference.docx"})," file. However, if you\nneed to apply your own styles to blocks, or match a preexisting set of\nstyles, pandoc allows you to define custom styles for blocks and text\nusing ",(0,s.jsx)(t.code,{children:"div"}),"s and ",(0,s.jsx)(t.code,{children:"span"}),"s, respectively."]}),"\n",(0,s.jsxs)(t.p,{children:["If you define a ",(0,s.jsx)(t.code,{children:"div"})," or ",(0,s.jsx)(t.code,{children:"span"})," with the attribute ",(0,s.jsx)(t.code,{children:"custom-style"}),",\npandoc will apply your specified style to the contained elements (with\nthe exception of elements whose function depends on a style, like\nheadings, code blocks, block quotes, or links). So, for example, using\nthe ",(0,s.jsx)(t.code,{children:"bracketed_spans"})," syntax,"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'[Get out]{custom-style="Emphatically"}, he said.\n'})}),"\n",(0,s.jsxs)(t.p,{children:["would produce a docx file with \u201cGet out\u201d styled with character style\n",(0,s.jsx)(t.code,{children:"Emphatically"}),". Similarly, using the ",(0,s.jsx)(t.code,{children:"fenced_divs"})," syntax,"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'Dickinson starts the poem simply:\n\n::: {custom-style="Poetry"}\n| A Bird came down the Walk---\n| He did not know I saw---\n:::\n'})}),"\n",(0,s.jsxs)(t.p,{children:["would style the two contained lines with the ",(0,s.jsx)(t.code,{children:"Poetry"})," paragraph style."]}),"\n",(0,s.jsx)(t.p,{children:"For docx output, styles will be defined in the output file as inheriting\nfrom normal text, if the styles are not yet in your reference.docx. If\nthey are already defined, pandoc will not alter the definition."}),"\n",(0,s.jsxs)(t.p,{children:["This feature allows for greatest customization in conjunction with\n",(0,s.jsx)(t.a,{href:"https://pandoc.org/filters.html",children:"pandoc filters"}),". If you want all\nparagraphs after block quotes to be indented, you can write a filter to\napply the styles necessary. If you want all italics to be transformed to\nthe ",(0,s.jsx)(t.code,{children:"Emphasis"})," character style (perhaps to change their color), you can\nwrite a filter which will transform all italicized inlines to inlines\nwithin an ",(0,s.jsx)(t.code,{children:"Emphasis"})," custom-style ",(0,s.jsx)(t.code,{children:"span"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"For docx output, you don\u2019t need to enable any extensions for custom\nstyles to work."}),"\n",(0,s.jsx)(t.h2,{id:"input",children:"Input"}),"\n",(0,s.jsx)(t.p,{children:"The docx reader, by default, only reads those styles that it can convert\ninto pandoc elements, either by direct conversion or interpreting the\nderivation of the input document\u2019s styles."}),"\n",(0,s.jsxs)(t.p,{children:["By enabling the ",(0,s.jsxs)(t.a,{href:"#ext-styles",children:[(0,s.jsx)(t.code,{children:"styles"})," extension"]})," in the docx reader\n(",(0,s.jsx)(t.code,{children:"-f docx+styles"}),"), you can produce output that maintains the styles of\nthe input document, using the ",(0,s.jsx)(t.code,{children:"custom-style"})," class. Paragraph styles are\ninterpreted as divs, while character styles are interpreted as spans."]}),"\n",(0,s.jsxs)(t.p,{children:["For example, using the ",(0,s.jsx)(t.code,{children:"custom-style-reference.docx"})," file in the test\ndirectory, we have the following different outputs:"]}),"\n",(0,s.jsxs)(t.p,{children:["Without the ",(0,s.jsx)(t.code,{children:"+styles"})," extension:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"$ pandoc test/docx/custom-style-reference.docx -f docx -t markdown\nThis is some text.\n\nThis is text with an *emphasized* text style. And this is text with a\n**strengthened** text style.\n\n> Here is a styled paragraph that inherits from Block Text.\n"})}),"\n",(0,s.jsx)(t.p,{children:"And with the extension:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'$ pandoc test/docx/custom-style-reference.docx -f docx+styles -t markdown\n\n::: {custom-style="First Paragraph"}\nThis is some text.\n:::\n\n::: {custom-style="Body Text"}\nThis is text with an [emphasized]{custom-style="Emphatic"} text style.\nAnd this is text with a [strengthened]{custom-style="Strengthened"}\ntext style.\n:::\n\n::: {custom-style="My Block Style"}\n> Here is a styled paragraph that inherits from Block Text.\n:::\n'})}),"\n",(0,s.jsx)(t.p,{children:"With these custom styles, you can use your input document as a\nreference-doc while creating docx output (see below), and maintain the\nsame styles in your input and output files."})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>r});var s=n(7294);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);